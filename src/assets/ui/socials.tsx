import {defaultHeight, defaultWidth, IconType} from "./icons";

export const FacebookIcon: IconType = (props) => {
    return (
        <svg width={props.width ?? defaultWidth}
             height={props.height ?? defaultHeight} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
            <path fillRule="evenodd" clipRule="evenodd" d="M22 12C22 6.477 17.523 2 12 2C6.477 2 2 6.477 2 12C2 16.991 5.657 21.128 10.438 21.878V14.891H7.898V12H10.438V9.797C10.438 7.291 11.93 5.907 14.215 5.907C15.309 5.907 16.453 6.102 16.453 6.102V8.562H15.193C13.95 8.562 13.563 9.333 13.563 10.124V12H16.336L15.893 14.89H13.563V21.878C18.343 21.128 22 16.991 22 12Z" fill="currentColor"/>
        </svg>
    );
};

export const Facebook2Icon: IconType = (props) => {
    return (
        <svg width="9" height="16" viewBox="0 0 9 16" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
            <path
                d="M5.69264 15.4047V8.37785H8.05129L8.40441 5.63937H5.69264V3.89092C5.69264 3.09808 5.91283 2.55772 7.04986 2.55772L8.5 2.55705V0.10779C8.24909 0.0745379 7.38833 0 6.38691 0C4.29614 0 2.86475 1.27615 2.86475 3.61985V5.63944H0.5V8.37793H2.86467V15.4048L5.69264 15.4047Z"
                fill="currentColor"/>
        </svg>
    );
};

export const VkIcon: IconType = (props) => {
    return (
        <svg width="21" height="13" viewBox="0 0 21 13" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
            <path fillRule="evenodd" clipRule="evenodd" d="M20.1958 1.16451C20.3395 0.685432 20.1958 0.333313 19.5119 0.333313H17.2506C16.6755 0.333313 16.4106 0.637459 16.2669 0.97294C16.2669 0.97294 15.1169 3.77583 13.4877 5.59651C12.9607 6.12356 12.7212 6.29106 12.4336 6.29106C12.2899 6.29106 12.0819 6.12356 12.0819 5.64448V1.16451C12.0819 0.589488 11.915 0.333313 11.4358 0.333313H7.88228C7.52305 0.333313 7.30694 0.600148 7.30694 0.853091C7.30694 1.39823 8.12133 1.52389 8.20532 3.05706V6.38716C8.20532 7.11724 8.07352 7.24969 7.78601 7.24969C7.01943 7.24969 5.15482 4.43404 4.04871 1.21248C3.83195 0.586257 3.61454 0.333313 3.03662 0.333313H0.775306C0.129218 0.333313 0 0.637459 0 0.97294C0 1.57186 0.766745 4.54258 3.56964 8.47144C5.43845 11.1543 8.07094 12.609 10.4666 12.609C11.9042 12.609 12.0819 12.2859 12.0819 11.7295V9.7016C12.0819 9.05551 12.218 8.92661 12.673 8.92661C13.0087 8.92661 13.5835 9.09427 14.9253 10.3879C16.4585 11.9209 16.7111 12.609 17.5736 12.609H19.8349C20.481 12.609 20.804 12.2859 20.6176 11.6484C20.4138 11.013 19.6818 10.0913 18.7104 8.99849C18.1833 8.3755 17.3927 7.7047 17.1533 7.36938C16.8178 6.93811 16.9136 6.74655 17.1533 6.36342C17.1533 6.36342 19.9082 2.48237 20.1958 1.16467V1.16451Z" fill="currentColor"/>
        </svg>
    );
};

export const InstagramIcon: IconType = (props) => {
    return (
        <svg width={props.width ?? defaultWidth}
             height={props.height ?? defaultHeight} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
            <path fillRule="evenodd" clipRule="evenodd" d="M12.315 2C14.745 2 15.099 2.013 16.123 2.06C17.187 2.109 17.914 2.278 18.55 2.525C19.2175 2.77587 19.8222 3.16936 20.322 3.678C20.8306 4.17777 21.2241 4.7825 21.475 5.45C21.722 6.086 21.891 6.813 21.94 7.877C21.988 8.944 22 9.284 22 12V12.08C22 14.723 21.988 15.067 21.94 16.123C21.891 17.187 21.722 17.914 21.475 18.55C21.2241 19.2175 20.8306 19.8222 20.322 20.322C19.8222 20.8306 19.2175 21.2241 18.55 21.475C17.914 21.722 17.187 21.891 16.123 21.94C15.056 21.988 14.716 22 12 22H11.92C9.277 22 8.933 21.988 7.877 21.94C6.813 21.891 6.086 21.722 5.45 21.475C4.7825 21.2241 4.17777 20.8306 3.678 20.322C3.16936 19.8222 2.77587 19.2175 2.525 18.55C2.278 17.914 2.109 17.187 2.06 16.123C2.013 15.099 2 14.744 2 12.315V11.685C2 9.255 2.013 8.901 2.06 7.877C2.109 6.813 2.278 6.086 2.525 5.45C2.77587 4.7825 3.16936 4.17777 3.678 3.678C4.17777 3.16936 4.7825 2.77587 5.45 2.525C6.086 2.278 6.813 2.109 7.877 2.06C8.901 2.013 9.256 2 11.685 2H12.315ZM12.234 3.802H11.766C9.31 3.802 8.982 3.813 7.959 3.86C6.984 3.905 6.455 4.067 6.102 4.204C5.635 4.386 5.302 4.602 4.952 4.952C4.602 5.302 4.386 5.635 4.204 6.102C4.067 6.455 3.904 6.984 3.86 7.959C3.813 8.982 3.802 9.31 3.802 11.766V12.234C3.802 14.69 3.813 15.018 3.86 16.041C3.905 17.016 4.067 17.545 4.204 17.898C4.386 18.364 4.603 18.698 4.952 19.048C5.302 19.398 5.635 19.614 6.102 19.796C6.455 19.933 6.984 20.096 7.959 20.14C9.013 20.188 9.329 20.198 12 20.198H12.08C14.677 20.198 14.997 20.188 16.04 20.14C17.016 20.095 17.545 19.933 17.898 19.796C18.364 19.614 18.698 19.398 19.048 19.048C19.398 18.698 19.614 18.365 19.796 17.898C19.933 17.545 20.096 17.016 20.14 16.041C20.188 14.986 20.198 14.671 20.198 12V11.92C20.198 9.323 20.188 9.003 20.14 7.96C20.095 6.984 19.933 6.455 19.796 6.102C19.6358 5.66757 19.3802 5.2746 19.048 4.952C18.7254 4.61986 18.3324 4.36426 17.898 4.204C17.545 4.067 17.016 3.904 16.041 3.86C15.018 3.813 14.69 3.802 12.234 3.802ZM12 6.865C12.6743 6.865 13.3421 6.99782 13.9651 7.25588C14.5881 7.51394 15.1542 7.89218 15.631 8.36901C16.1078 8.84584 16.4861 9.41191 16.7441 10.0349C17.0022 10.6579 17.135 11.3257 17.135 12C17.135 12.6743 17.0022 13.3421 16.7441 13.9651C16.4861 14.5881 16.1078 15.1542 15.631 15.631C15.1542 16.1078 14.5881 16.4861 13.9651 16.7441C13.3421 17.0022 12.6743 17.135 12 17.135C10.6381 17.135 9.33201 16.594 8.36901 15.631C7.40601 14.668 6.865 13.3619 6.865 12C6.865 10.6381 7.40601 9.33201 8.36901 8.36901C9.33201 7.40601 10.6381 6.865 12 6.865ZM12 8.667C11.116 8.667 10.2683 9.01815 9.64321 9.64321C9.01815 10.2683 8.667 11.116 8.667 12C8.667 12.884 9.01815 13.7317 9.64321 14.3568C10.2683 14.9818 11.116 15.333 12 15.333C12.884 15.333 13.7317 14.9818 14.3568 14.3568C14.9818 13.7317 15.333 12.884 15.333 12C15.333 11.116 14.9818 10.2683 14.3568 9.64321C13.7317 9.01815 12.884 8.667 12 8.667ZM17.338 5.462C17.6563 5.462 17.9615 5.58843 18.1865 5.81347C18.4116 6.03852 18.538 6.34374 18.538 6.662C18.538 6.98026 18.4116 7.28548 18.1865 7.51053C17.9615 7.73557 17.6563 7.862 17.338 7.862C17.0197 7.862 16.7145 7.73557 16.4895 7.51053C16.2644 7.28548 16.138 6.98026 16.138 6.662C16.138 6.34374 16.2644 6.03852 16.4895 5.81347C16.7145 5.58843 17.0197 5.462 17.338 5.462Z" fill="currentColor"/>
        </svg>
    );
};

export const XIcon: IconType = (props) => {
    return (
        <svg width={props.width ?? defaultWidth}
             height={props.height ?? defaultHeight} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
            <path d="M8.29 20.251C15.837 20.251 19.965 13.998 19.965 8.57596C19.965 8.39796 19.965 8.22096 19.953 8.04596C20.7562 7.46448 21.4493 6.74457 22 5.91996C21.2511 6.25196 20.4566 6.46972 19.643 6.56596C20.4996 6.05302 21.1408 5.24631 21.447 4.29596C20.6417 4.77384 19.7607 5.11069 18.842 5.29196C18.2234 4.63372 17.405 4.19779 16.5136 4.05166C15.6222 3.90553 14.7075 4.05736 13.9111 4.48363C13.1147 4.9099 12.4811 5.58683 12.1083 6.40962C11.7355 7.2324 11.6444 8.15514 11.849 9.03496C10.2176 8.9532 8.6216 8.52928 7.16465 7.79073C5.70769 7.05217 4.42233 6.01548 3.392 4.74796C2.86732 5.65116 2.70659 6.72038 2.94254 7.73792C3.17848 8.75547 3.79337 9.64483 4.662 10.225C4.00926 10.2061 3.37063 10.0305 2.8 9.71296V9.76496C2.80039 10.7123 3.1284 11.6303 3.7284 12.3633C4.3284 13.0964 5.16347 13.5993 6.092 13.787C5.48781 13.9517 4.85389 13.9756 4.239 13.857C4.50116 14.6724 5.01168 15.3856 5.69913 15.8966C6.38658 16.4076 7.21657 16.6909 8.073 16.707C7.22212 17.3755 6.24779 17.8698 5.20573 18.1615C4.16367 18.4532 3.07432 18.5366 2 18.407C3.8766 19.6113 6.06019 20.2501 8.29 20.247" fill="currentColor"/>
        </svg>
    );
};

export const GithubIcon: IconType = (props) => {
    return (
        <svg width={props.width ?? defaultWidth}
             height={props.height ?? defaultHeight} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
            <path fillRule="evenodd" clipRule="evenodd" d="M12 2C6.477 2 2 6.484 2 12.017C2 16.442 4.865 20.197 8.839 21.521C9.339 21.613 9.521 21.304 9.521 21.038C9.521 20.801 9.513 20.17 9.508 19.335C6.726 19.94 6.139 17.992 6.139 17.992C5.685 16.834 5.029 16.526 5.029 16.526C4.121 15.906 5.098 15.918 5.098 15.918C6.101 15.988 6.629 16.95 6.629 16.95C7.521 18.48 8.97 18.038 9.539 17.782C9.631 17.135 9.889 16.694 10.175 16.444C7.955 16.191 5.62 15.331 5.62 11.493C5.62 10.4 6.01 9.505 6.649 8.805C6.546 8.552 6.203 7.533 6.747 6.155C6.747 6.155 7.587 5.885 9.497 7.181C10.3128 6.95851 11.1544 6.84519 12 6.844C12.85 6.848 13.705 6.959 14.504 7.181C16.413 5.885 17.251 6.154 17.251 6.154C17.797 7.533 17.453 8.552 17.351 8.805C17.991 9.505 18.379 10.4 18.379 11.493C18.379 15.341 16.04 16.188 13.813 16.436C14.172 16.745 14.491 17.356 14.491 18.291C14.491 19.629 14.479 20.71 14.479 21.038C14.479 21.306 14.659 21.618 15.167 21.52C17.1583 20.8521 18.8893 19.5753 20.1155 17.87C21.3416 16.1648 22.0009 14.1173 22 12.017C22 6.484 17.522 2 12 2Z" fill="currentColor"/>
        </svg>
    );
};

export const YoutubeIcon: IconType = (props) => {
    return (
        <svg width={props.width ?? defaultWidth}
             height={props.height ?? defaultHeight} viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" {...props}>
            <path fillRule="evenodd" clipRule="evenodd" d="M19.812 5.418C20.673 5.648 21.35 6.325 21.58 7.186C21.998 8.746 22 12 22 12C22 12 22 15.255 21.582 16.814C21.4681 17.2378 21.2448 17.6242 20.9345 17.9345C20.6242 18.2448 20.2378 18.4681 19.814 18.582C18.254 19.001 12 19.001 12 19.001C12 19.001 5.745 19.001 4.186 18.582C3.76227 18.468 3.37592 18.2446 3.06564 17.9344C2.75536 17.6241 2.53203 17.2377 2.418 16.814C2 15.255 2 12 2 12C2 12 2 8.745 2.417 7.186C2.53121 6.76236 2.75461 6.37611 3.06486 6.06586C3.37511 5.75561 3.76136 5.53221 4.185 5.418C5.744 5 11.998 5 11.998 5C11.998 5 18.253 5 19.812 5.418ZM15.194 12L10 15V9L15.194 12Z" fill="currentColor"/>
        </svg>
    );
};
